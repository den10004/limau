"use client";
import Link from "next/link";
import { useEffect, useState } from "react";
import { ModalQuestions } from "./ModalQuestions";
import { Switch } from "../Switch";

interface ModalHeaderProps {
  onClose: () => void;
  topics: any;
}

export const ModalHeader: React.FC<ModalHeaderProps> = ({
  onClose,
  topics,
}) => {
  const [callbackModal, setCallbackModal] = useState(false);

  return (
    <div id="myModal" className="modal">
      <div className="modal-content">
        <span className="close-btn" onClick={onClose}>
          ×
        </span>

        <div className="modal__switch">
          <Switch />
        </div>

        <ul className="modal__list text16">
          {/*
          <Link href="">О компании</Link>*/}
          <Link href="/contacts">Контакты</Link>

          {/*
          <Link href="">Каталог</Link>*/}
          <br />

          {topics?.map((item: { slug: string; title: string }, i: number) => {
            return (
              <Link key={i} href={item.slug}>
                {item.title}
              </Link>
            );
          })}

          <br />
          <Link href="tel:88007700473">8 (800) 770-04-73</Link>
          <Link href="/" onClick={() => setCallbackModal(true)}>
            Заказать обратный звонок
          </Link>
        </ul>
        <ul className="modal__icons">
          <Link href="#">
            <svg
              style={{ marginRight: "10px" }}
              width="40"
              height="40"
              viewBox="0 0 40 40"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M20 40C31.0457 40 40 31.0457 40 20C40 8.95431 31.0457 0 20 0C8.95431 0 0 8.95431 0 20C0 31.0457 8.95431 40 20 40Z"
                fill="#2AABEE"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M9.05368 19.7888C14.8841 17.2486 18.7719 15.574 20.7172 14.7648C26.2714 12.4547 27.4256 12.0534 28.1778 12.0401C28.3433 12.0372 28.7132 12.0782 28.9528 12.2726C29.1551 12.4368 29.2108 12.6586 29.2374 12.8143C29.2641 12.9699 29.2973 13.3245 29.2709 13.6016C28.9699 16.7641 27.6675 24.4385 27.005 27.9806C26.7246 29.4793 26.1726 29.9819 25.6382 30.031C24.4767 30.1379 23.5948 29.2635 22.4699 28.5261C20.7096 27.3722 19.7152 26.6539 18.0065 25.528C16.0319 24.2267 17.312 23.5115 18.4373 22.3427C18.7318 22.0368 23.8491 17.3822 23.9482 16.96C23.9606 16.9072 23.9721 16.7103 23.8551 16.6064C23.7382 16.5024 23.5656 16.538 23.441 16.5663C23.2645 16.6063 20.4525 18.465 15.0049 22.1422C14.2067 22.6903 13.4838 22.9574 12.836 22.9434C12.1219 22.9279 10.7483 22.5396 9.72709 22.2077C8.47459 21.8005 7.47913 21.5853 7.56581 20.8938C7.61096 20.5337 8.10692 20.1653 9.05368 19.7888Z"
                fill="white"
              />
            </svg>
          </Link>

          <Link href="https://wa.me/79200000000">
            <svg
              width="40"
              height="40"
              viewBox="0 0 40 40"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M34.4623 5.38358C32.7114 3.67069 30.6261 2.31253 28.3279 1.38827C26.0297 0.464002 23.5647 -0.00788684 21.0764 9.97057e-05C10.6503 9.97057e-05 2.15276 8.23258 2.15276 18.3336C2.15276 21.571 3.03116 24.716 4.67337 27.491L2 37L12.0251 34.447C14.794 35.9085 17.9065 36.6855 21.0764 36.6855C31.5025 36.6855 40 28.453 40 18.3521C40 13.4496 38.0332 8.84308 34.4623 5.38358ZM21.0764 33.5775C18.2502 33.5775 15.4814 32.8375 13.0563 31.45L12.4834 31.117L6.52563 32.634L8.11055 27.01L7.72864 26.4365C6.15813 24.0076 5.32438 21.1997 5.32261 18.3336C5.32261 9.93457 12.3879 3.08959 21.0573 3.08959C25.2583 3.08959 29.2111 4.68059 32.1709 7.56658C33.6367 8.97972 34.7982 10.6608 35.5882 12.5122C36.3782 14.3637 36.7809 16.3487 36.7729 18.3521C36.8111 26.751 29.7457 33.5775 21.0764 33.5775ZM29.7075 22.1815C29.2301 21.9595 26.9005 20.8495 26.4804 20.683C26.0412 20.535 25.7357 20.461 25.4111 20.905C25.0864 21.3675 24.1889 22.4035 23.9216 22.6995C23.6543 23.014 23.3678 23.051 22.8904 22.8105C22.4131 22.5885 20.8854 22.089 19.0905 20.535C17.6774 19.314 16.7417 17.8156 16.4553 17.3531C16.1879 16.8906 16.4171 16.6501 16.6653 16.4096C16.8754 16.2061 17.1427 15.8731 17.3719 15.6141C17.601 15.3551 17.6965 15.1516 17.8492 14.8556C18.002 14.5411 17.9256 14.2821 17.8111 14.0601C17.6965 13.8381 16.7417 11.5811 16.3598 10.6561C15.9779 9.76807 15.5769 9.87907 15.2905 9.86057H14.3739C14.0492 9.86057 13.5528 9.97157 13.1136 10.4341C12.6935 10.8966 11.4714 12.0066 11.4714 14.2636C11.4714 16.5206 13.1709 18.7036 13.4 18.9995C13.6291 19.314 16.7417 23.939 21.4774 25.9185C22.604 26.3995 23.4824 26.677 24.1698 26.8805C25.2965 27.232 26.3276 27.1765 27.1487 27.0655C28.0653 26.936 29.9558 25.9555 30.3377 24.8825C30.7387 23.8095 30.7387 22.903 30.605 22.6995C30.4714 22.496 30.1849 22.4035 29.7075 22.1815Z"
                fill="#25D366"
              />
            </svg>
          </Link>
        </ul>
      </div>

      {callbackModal && (
        <ModalQuestions onClose={() => setCallbackModal(false)} />
      )}
    </div>
  );
};
